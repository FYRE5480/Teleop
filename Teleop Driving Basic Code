//include libraries
#include "WPILib.h"


class Robot: public SampleRobot
{

    // Channels for the wheels
    const static int frontLeftChannel	= 2;
    const static int rearLeftChannel	= 3;
    const static int frontRightChannel	= 1;
    const static int rearRightChannel	= 0;

    const static int joystickChannel	= 0;
    
        int joystickX = 0;
	int joystickY = 0;
	int joystickZ = 0;

	RobotDrive robotDrive;	// robot drive system
	Joystick stick;			// only joystick

public:
	Robot() :
			robotDrive(frontLeftChannel, rearLeftChannel,
					   frontRightChannel, rearRightChannel),	// these must be initialized in the same order
			stick(joystickChannel)								// as they are declared above.
	{
		robotDrive.SetExpiration(0.1);
		robotDrive.SetInvertedMotor(RobotDrive::kFrontLeftMotor, true);	// invert the left side motors
		robotDrive.SetInvertedMotor(RobotDrive::kRearLeftMotor, true);	// you may need to change or remove this to match your robot
	}
	
void OperatorControl()
	{
		robotDrive.SetSafetyEnabled(false);
		while (IsOperatorControl() && IsEnabled())
		{
        	// Use the joystick X axis for lateral movement, Y axis for forward movement, and Z axis for rotation.
        	// Setting variables/thresholds
			
			jostickX = stick.GetX();
			jostickY = stick.GetY();
			jostickZ = stick.GetZ();
			
			if joystickX <= 10 || joystickX >= -10{
				joystickX=0
			}
			
			if joystickY <= 10 || joystickY >= -10{
				joystickY=0
			}
			
			if joystickZ <= 10 || joystickZ >= -10{
				joystickZ=0
			}
			
			robotDrive.MecanumDrive_Cartesian(joystickX, joystickY, joystickZ);

			Wait(0.005); // wait 5ms to avoid hogging CPU cycles
		}
	}

};

START_ROBOT_CLASS(Robot);
